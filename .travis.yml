
languange: c

matrix:
  include:
    # GCC on linux
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    # GCC on Darwin
    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc5 && CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc6 && CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"

    # Clang on Linux
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    # Clang on Darwin
    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    # Java 10 on Darwin
    - os: osx
      sudo: true
      osx_image: xcode6.4
      env:
        - MATRIX_EVAL="JAVA_TEST"

# Install dependencies
install:
  - echo "Installing dependencies..."
  - echo "Done."

# Build
before_script:
  - echo "Building..."
  - if [ "$TRAVIS_OS_NAME" != "windows" ] && [ "$MATRIX_EVAL" != "JAVA_TEST" ]; then cd jxnet-native/libpcap && ./configure && make && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ] && [ "$MATRIX_EVAL" != "JAVA_TEST" ]; then cd jxnet-native && export JAVA_HOME=$(pwd) && ./bootstrap.sh && ./configure && make && sudo make install && cd ..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ] && [ "$MATRIX_EVAL" != "JAVA_TEST" ]; then cd jxnet-native && mkdir build && cd build && cmake .. && make && sudo make install && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ] && [ "$MATRIX_EVAL" != "JAVA_TEST" ]; then cd jxnet-native/libpcap && sudo make install && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$MATRIX_EVAL" == "JAVA_TEST" ]; then export JAVA_HOME=$(/usr/libexec/java_home) && sudo -E ./gradlew build -x test; fi
  - echo "Done."

# Test
script:
  - echo "Testing..."
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$MATRIX_EVAL" == "JAVA_TEST" ]; then export JAVA_HOME=$(/usr/libexec/java_home) && sudo -E ./gradlew test jacocoTestReport; fi
  - echo "Done."

# Publish test result
after_success:
  - echo "Publishing test result..."
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$MATRIX_EVAL" == "JAVA_TEST" ]; then export JAVA_HOME=$(/usr/libexec/java_home) && sudo -E ./gradlew sonarqube coveralls; fi
  - echo "Done."

addons:
  sonarcloud:
    organization: "jxnet"
    token:
      secure: "Za0wrUnmjHXgDPk7uEUkABb5Ds8Y8GfajPFBfYksDNVltm8AXIhY+3X4jg0tEtkeVzw0nov1AoBZvsZThOrpFnuEWEnq+UVYe72WFouTb/a9yVYGd2eQ9+YVjpX6/dfV4NtMwRNTmZvB0RO/nSlWB6+1NjaPnMGE3Holis22+hdTW5yF/rACMcF3L8ALcOQbW97STRDzaYQAcjIBDsxcezxhn/3nEjPwGPiQOZrGJIdEexg51en7ZAN9PEcQ3aQPIbtP+MaTokvclHusO2SjKUT8DX+BBuzaEipk+6EX6WTIBCfq8TltEwrrFT/J1rmnW7Ke4MOZMcEEl1Muhbz2Fj/juXcobl3Fi+87bTP1A+TAcFJ4zOa5eL+KLL4WlNJxX//2zCgXNVecZDSHempd3wDdIVK+VjLW/sNtt2fxm9uG6cBr3pju4DaXssJUYyGPaZzntfe60BPF/Reyq39wYhgi/lXDvECfdaU6G8RXc/zEIIeG3mW5xHdTczbJZXdfkHtMtLUjXjnC8GF/JV/2PPzCvQJM0vzxnFQ9w3kI4rs3S3EK7XtEX5YCFOw8jTwj1D0bnoVMfhK4e033caHuqAZhca8FPEtdRA8uDbUbs3nKrIYyxD2kWVZcYW7k2G+FiJEnPF6SyP8zk79AOpsbTIY1UiWmVoP4RlKCQw4P9Z4="
  script:
    - sonar-scanner
