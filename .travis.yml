
matrix:
  include:
    # GCC on linux
    - language: c
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - TRAVIS_COMPILER=gcc

    # GCC on Darwin
    - language: c
      os: osx
      osx_image: xcode10.1
      env:
        - TRAVIS_COMPILER=gcc

    # Clang on Linux
    - language: c
      os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - TRAVIS_COMPILER=clang

    # Clang on Darwin
    - language: c
      os: osx
      osx_image: xcode10.1
      env:
        - TRAVIS_COMPILER=clang

    # Mingw64 on Windows
#    - language: shell
#      os: windows
#      cache:
#        directories:
#          - if [ "$TRAVIS_OS_NAME" != "windows" ]; then /c/tools; fi
#          - $HOME/.gradle
#      env:
#        - TRAVIS_COMPILER=gcc

# Install dependencies
install:
  - echo "Installing dependencies..."
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then export JAVA_HOME=/c/tools/jdk8; fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then export PATH=/c/tools/mingw64/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then PowerShell -Command 'Set-ExecutionPolicy -ExecutionPolicy RemoteSigned'; fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then PowerShell -File ./.scripts/InstallMingw64.ps1; fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then PowerShell -File ./.scripts/InstallNpcap.ps1; fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then PowerShell -Command 'choco install jdk8 -params "installdir=C:\\tools\\jdk8"'; fi
  - echo "Done."

# Build
before_script:
  - echo "Building..."
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native/libpcap && ./configure && make && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native && export JAVA_HOME=$(pwd) && ./bootstrap.sh && ./configure && make && sudo make install && cd ..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native && mkdir build && cd build && cmake .. && make && sudo make install && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native/libpcap && sudo make install && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then ./gradlew -p jxnet-native build; fi
  - echo "Done."

script:
  - echo "Verifying..."
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ls -lat jxnet-native/libpcap/libpcap* ; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ls -lat jxnet-native/src/.libs/libjxnet* ; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then ls -lat jxnet-native/build/libjxnet* ; fi
  - echo "Done."

after_success:
  - echo "Cleaning..."
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native/libpcap && make clean && make uninstall && cd ../..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native && make clean && make uninstall && cd ..; fi
  - if [ "$TRAVIS_OS_NAME" != "windows" ]; then cd jxnet-native/build/ && make clean && make uninstall && cd ../..; fi
  - echo "Done."
