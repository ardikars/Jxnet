
/**
 * Copyright (C) 2015-2018 Jxnet
 */

ext {

	NAME = 'Jxnet'
	GROUP = 'com.ardikars.jxnet'
	VERSION = '1.5.5.RC1'
	DESCRIPTION = 'Jxnet is a java library for capturing and sending network packet.'

	NDK_HOME = "${System.env.NDK_HOME}"
	TOOLS_DIR = "${rootDir}/tools"
	JXNET_OBJ = "${rootDir}/obj/jxnet"
	TOOLS_OBJ = "${rootDir}/obj/tools"
	JXNET_OUT = "${rootDir}/jxnet-core/src/main/resources/lib"
	TOOLS_OUT = "${rootDir}/jxnet-core/src/main/resources/bin"
	MAVEN_LOCAL_REPOSITORY = "${rootDir}/build/repository"
//	MAVEN_LOCAL_REPOSITORY = "${System.env.HOME}/.m2/repository"

	JAVA_VERSION = '1.6'
	JUNIT_VERSION = '4.12'
	MOCKITO_VERSION = '2.13.0'
	GRADLE_VERSION = '5.0'
	SLF4J_VERSION = '1.7.25'
	LOGBACK_VERSION = '1.2.3'

	CHECKSTYLE_VERSION = '8.10.1'
	SPOTBUGS_VERSION = '3.1.5'
	PMD_VERION = '6.10.0'
	JACOCO_VERSION = '0.8.2'

	COMMON_VERSION = '1.2.6.RELEASE'
	JXPACKET_VERSION = '1.2.2.RELEASE'
	NETTY_VERSION = '4.1.31.Final'
	REACTOR_VERSION = 'Californium-RELEASE'
	JNR_VERSION = '2.1.9'

	SPRING_BOOT_VERSION = '2.0.4.RELEASE'

	REPOSITORY = 'https://github.com/jxnet/Jxnet'
	
	pom_project = {
		
		url "${REPOSITORY}"

		inceptionYear '2015'

		developers {
			developer {
				id 'ardikars'
				name 'Ardika Rommy Sanjaya'
				email 'contact@ardikars.com'
			}
		}

		licenses {
			license {
				name 'GNU Lesser General Public License, Version 3.0'
				url 'http://www.gnu.org/licenses'
				distribution 'repo'
			}
		}

		scm {
			url "${REPOSITORY}"
			connection "scm:git:${REPOSITORY}"
			developerConnection "scm:git:${REPOSITORY}"
			tag 'HEAD'
		}

		organization {
			name 'ardikars'
			url 'http://ardikars.com'
		}

	}

	bom_dependencies = {

		dependency {
			groupId "${GROUP}"
			artifactId "jxnet-context"
			version "${VERSION}"
		}
		dependency {
			groupId "${GROUP}"
			artifactId "jxnet-core"
			version "${VERSION}"
		}
		dependency {
			groupId "${GROUP}"
			artifactId "jxnet-packet"
			version "${VERSION}"
		}
		dependency {
			groupId "${GROUP}"
			artifactId "jxnet-spring-boot-autoconfigure"
			version "${VERSION}"
		}
		dependency {
			groupId "${GROUP}"
			artifactId "jxnet-spring-boot-starter"
			version "${VERSION}"
		}

	}

	defaultBlank = { closure ->
		try {
			closure()
		} catch (MissingPropertyException e) {
			''
		}
	}

}
